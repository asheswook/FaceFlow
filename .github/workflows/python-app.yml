# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
    release:
        types: [published]
    pull_request:
        branches: ["main"]

permissions:
    contents: read

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - name: Set up Python 3.10
              uses: actions/setup-python@v3
              with:
                  python-version: "3.10"
            - name: Install dilb
              run: |
                  apt-get install -y --fix-missing \
                  build-essential \
                  cmake \
                  gfortran \
                  git \
                  wget \
                  curl \
                  graphicsmagick \
                  libgraphicsmagick1-dev \
                  libatlas-base-dev \
                  libavcodec-dev \
                  libavformat-dev \
                  libgtk2.0-dev \
                  libjpeg-dev \
                  liblapack-dev \
                  libswscale-dev \
                  pkg-config \
                  python3-dev \
                  python3-numpy \
                  software-properties-common \
                  zip \
                  && apt-get clean && rm -rf /tmp/* /var/tmp/*
                  cd ~ && \
                  mkdir -p dlib && \
                  git clone -b 'v19.9' --single-branch https://github.com/davisking/dlib.git dlib/ && \
                  cd  dlib/ && \
                  python3 setup.py install --yes USE_AVX_INSTRUCTIONS
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install flake8 pytest
                  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            - name: Lint with flake8
              run: |
                  # stop the build if there are Python syntax errors or undefined names
                  flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                  # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                  flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
            - name: Test
              run: |
                  cd tests
                  python test.py
